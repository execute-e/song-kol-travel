@charset "UTF-8";
@font-face {
  font-family: "Rubik";
  src: url("../fonts/Rubik-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Rubik";
  src: url("../fonts/Rubik-Medium.woff2") format("woff2");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
:root {
  --text-color-dark: #000000;
  --text-color-light: #F3F3F3;
  --text-color-gray: #3C3C3C;
  --text-color-gray-alt: #BEBEBE;
  --text-color-light-gray: #545454;
  --color-accent: #33A8D5;
  --color-accent-alt: rgba(51,168,213, 0.7);
  --color-yellow: #EFA400;
  --color-current: #205871;
  --color-cyan: #8FACB8;
  --background-color: #FFFFFF;
  --font-family-base: "Rubik", sans-serif;
  --container-width: 80rem;
  --container-padding-x: 1.25rem;
  --transition-duration: 0.2s;
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (width <= 47.9375rem) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (width > 47.9375rem) {
  .visible-mobile {
    display: none !important;
  }
}

.accent {
  color: var(--color-accent);
}

.yellow {
  color: var(--color-yellow);
}

a,
button,
label,
input,
textarea,
select,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  color: inherit;
  font-weight: 400;
}
@media (any-hover: hover) {
  a:hover {
    color: var(--color-accent);
  }
}
@media (any-hover: none) {
  a:active {
    color: var(--color-accent);
  }
}
a[class] {
  text-decoration: none;
}
a.is-active {
  color: var(--color-accent);
  pointer-events: none;
}

:focus-visible {
  outline: 0.125rem dashed var(--color-accent);
  outline-offset: 0.25rem;
  transition-duration: 0s !important;
}

main {
  flex-grow: 1;
}

body {
  font-size: 1rem;
  display: flex;
  flex-direction: column;
  font-family: var(--font-family-base);
  letter-spacing: 0;
  line-height: 1.2;
  color: var(--text-color-dark);
  background-color: var(--background-color);
  position: relative;
  overflow-x: hidden;
}

.bg-overlay {
  background: url(/main-bg.jpg) no-repeat;
  background-size: cover;
}

html.locked {
  overflow: hidden;
}

h1, .h1 {
  font-size: clamp(2.125rem, 1.6923076923rem + 1.9230769231vw, 3.375rem);
  font-weight: 500;
}

h2, .h2 {
  font-size: clamp(1.5rem, 0.9807692308rem + 2.3076923077vw, 3rem);
  font-weight: 400;
}

h3, .h3 {
  font-size: 1.5rem;
  font-weight: 500;
}

::details-content {
  transition: height 0.5s ease, content-visibility 0.5s ease allow-discrete;
  height: 0;
  overflow: clip;
}

[open]::details-content {
  height: auto;
}

@supports (interpolate-size: allow-keywords) {
  :root {
    interpolate-size: allow-keywords;
  }
}
textarea {
  resize: none;
}

/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
  scrollbar-gutter: stable;
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not([fill=none],
[fill^=url])) {
  fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not([stroke=none],
[stroke^=url])) {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
.header {
  color: var(--text-color-light);
  position: absolute;
  right: 0;
  left: 0;
  top: 0;
}
.header__inner {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-block: 2.5rem;
}
.header__list {
  display: flex;
  column-gap: 5rem;
}
@media (width <= 47.9375rem) {
  .header__soc1als {
    display: none;
  }
}
.header__soc1als-list {
  display: flex;
  column-gap: 1.25rem;
}
.header__item {
  display: flex;
  align-items: center;
}
.header__image {
  min-width: 9.375rem;
  min-height: 2.8125rem;
}
@media (width <= 63.9375rem) {
  .header__navigation {
    display: none;
  }
}

.burger-button {
  --colorLine: var(--text-color-light);
  --firstLineWidth: 65%;
  --secondLineWidth: 85%;
  --thirdLineWidth: 50%;
  width: 2.5rem;
  height: 2.5rem;
  padding: 0;
  padding-right: 0.1875rem;
  background-color: transparent;
  border: none;
  display: flex;
  align-items: end;
  justify-content: center;
  flex-direction: column;
  row-gap: 0.5rem;
}
@media (any-hover: hover) {
  .burger-button:hover {
    --colorLine: var(--color-accent);
    --firstLineWidth: 75%;
    --secondLineWidth: 50%;
    --thirdLineWidth: 85%;
  }
}
@media (any-hover: none) {
  .burger-button:active {
    --colorLine: var(--color-accent);
    --firstLineWidth: 75%;
    --secondLineWidth: 50%;
    --thirdLineWidth: 85%;
  }
}
@media (width > 63.9375rem) {
  .burger-button {
    display: none;
  }
}
.burger-button__line {
  background-color: var(--colorLine);
  height: 0.25rem;
  border-radius: 0.125rem;
  display: inline-block;
  width: var(--secondLineWidth);
  transition: background-color 0.2s, width 0.2s;
}
.burger-button__line:first-child {
  width: var(--firstLineWidth);
}
.burger-button__line:last-child {
  width: var(--thirdLineWidth);
}

.burger-menu {
  position: fixed;
  display: flex;
  inset: 0;
  align-items: center;
  background-color: #36697F;
  color: var(--text-color-light);
  transition: transform 0.5s ease, opacity 0.5s ease, visibility 0.5s ease;
  transform: translateX(100%);
  opacity: 0;
  pointer-events: none;
  visibility: hidden;
}
.burger-menu.active {
  transform: translateX(0);
  opacity: 1;
  pointer-events: auto;
  visibility: visible;
}
@media (width > 63.9375rem) {
  .burger-menu {
    display: none;
  }
}
.burger-menu__navigation {
  flex-grow: 1;
}
.burger-menu__list {
  text-align: center;
  font-size: 2.25rem;
  display: flex;
  flex-direction: column;
  row-gap: 1.25rem;
}
.burger-menu__button {
  position: absolute;
  color: var(--text-color-light);
  background: transparent;
  border: none;
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;
}
@media (any-hover: hover) {
  .burger-menu__button:hover {
    color: var(--color-accent);
    transform: scale(1.2);
  }
}
@media (any-hover: none) {
  .burger-menu__button:active {
    color: var(--color-accent);
    transform: scale(1.2);
  }
}

.hero {
  min-height: 100vh;
  background: url(/main-bg.jpg) no-repeat;
  background-size: cover;
  color: var(--text-color-light);
  display: flex;
  flex-direction: column;
}
@media (width <= 89.9375rem) {
  .hero {
    padding-bottom: 5rem;
  }
}
.hero__inner {
  flex-grow: 1;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
  column-gap: 1.875rem;
}
@media (width <= 89.9375rem) {
  .hero__inner {
    flex-direction: column;
    justify-content: center;
    row-gap: 2.5rem;
    padding-top: 14.0625rem;
  }
}
@media (width <= 47.9375rem) {
  .hero__inner {
    padding-top: 9.375rem;
  }
}
.hero__info {
  display: flex;
  flex-direction: column;
  justify-content: start;
  row-gap: 0.625rem;
}
.hero__extra {
  display: flex;
  column-gap: 2.5rem;
  align-items: center;
  flex-wrap: wrap;
  row-gap: 0.625rem;
}
@media (width <= 47.9375rem) {
  .hero__extra {
    column-gap: 0.625rem;
  }
}
.hero__group {
  display: flex;
  align-items: center;
  column-gap: 0.25rem;
}
.hero__buttons {
  margin-top: 0.625rem;
  display: flex;
  column-gap: 2.5rem;
  align-items: center;
}

.btn-link {
  color: var(--text-color-light);
  padding: 0.75rem 1.5rem;
  border: solid 0.125rem var(--color-accent);
  background-color: var(--color-accent);
  border-radius: 0.25rem;
}
@media (any-hover: hover) {
  .btn-link:hover {
    background-color: transparent;
  }
}
@media (any-hover: none) {
  .btn-link:active {
    background-color: transparent;
  }
}
.btn-link--transparent {
  background-color: transparent;
  border-color: var(--text-color-light);
}

.slider {
  display: flex;
  flex-direction: column;
  row-gap: 2.5rem;
}
@media (width <= 89.9375rem) {
  .slider {
    justify-self: end;
  }
}
@media (width <= 47.9375rem) {
  .slider {
    display: none;
  }
}
.slider__window {
  width: 39.0625rem;
  overflow-x: hidden;
}
.slider__content {
  display: flex;
  display: flex;
  column-gap: 1.875rem;
  transition: transform 0.2s ease-out;
}
.slider__buttons {
  display: flex;
  justify-content: center;
  column-gap: 1.875rem;
}
.slider__button {
  border: 0.125rem solid var(--text-color-light);
  background-color: transparent;
  width: 2.5rem;
  height: 2.5rem;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0;
  border-radius: 50%;
  color: var(--text-color-light);
}
.slider__button:disabled {
  cursor: default;
  pointer-events: none;
}

.slider-card {
  display: flex;
  flex-direction: column;
  justify-content: end;
  min-width: 18.5625rem;
  height: 14.6875rem;
  background: linear-gradient(180deg, transparent 0%, black 100%) no-repeat center/cover;
  border-radius: 0.5rem;
  row-gap: 0.5rem;
  padding: 0 0 0.625rem 0.625rem;
}
.slider-card--1 {
  background-image: url(/main-bg.jpg);
}
.slider-card--2 {
  background-image: url(/bg-1.jpg);
}
.slider-card--3 {
  background-image: url(/bg-2.jpg);
}

.section {
  padding-block: 5rem;
}
@media (width <= 47.9375rem) {
  .section {
    padding-block: 3.125rem;
  }
}

.reviews {
  display: flex;
  flex-direction: column;
  align-items: start;
  row-gap: 2.5rem;
}
.reviews__header {
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.reviews__header-group {
  display: flex;
  align-items: baseline;
  column-gap: 0.625rem;
}
@media (width <= 47.9375rem) {
  .reviews__header-group {
    flex-direction: column;
    justify-content: center;
  }
}
.reviews__button {
  padding: 0.875rem 0.25rem;
  display: flex;
  align-items: center;
  column-gap: 0.625rem;
  background-color: transparent;
  border: none;
  color: var(--color-accent);
}
@media (any-hover: hover) {
  .reviews__button:hover {
    color: var(--color-accent-alt);
  }
}
@media (any-hover: none) {
  .reviews__button:active {
    color: var(--color-accent-alt);
  }
}
.reviews__body {
  display: flex;
  flex-direction: column;
  align-items: center;
  row-gap: 2.5rem;
}
.reviews__content {
  display: flex;
  align-items: center;
  column-gap: 1.875rem;
}
@media (width <= 47.9375rem) {
  .reviews__content {
    flex-direction: column;
    align-items: start;
  }
}

.review {
  display: flex;
  flex-direction: column;
  align-items: start;
  row-gap: 1.25rem;
  position: relative;
  padding-bottom: 2.3125rem;
}
.review__header {
  display: flex;
  flex-direction: column;
  row-gap: 0.375rem;
  align-items: start;
}
.review__title {
  font-size: 1.125rem;
  font-weight: 500;
}
.review__stars {
  display: flex;
  column-gap: 0.625rem;
  align-items: center;
}
.review__stars-count {
  font-size: 1.5rem;
  font-weight: 500;
}
.review__star {
  color: var(--color-yellow);
}
.review__body {
  display: flex;
  flex-direction: column;
  row-gap: 0.625rem;
}
.review__images {
  display: flex;
  justify-content: space-between;
}
@media (width <= 89.9375rem) {
  .review__images {
    justify-content: center;
  }
}
.review__date {
  position: absolute;
  right: 0;
  bottom: 0;
  color: var(--text-color-gray-alt);
}
.review__text {
  min-width: 0;
  width: 100%;
  overflow-wrap: break-word;
}
@media (width <= 89.9375rem) {
  .review__image {
    width: 100%;
  }
  .review__image:nth-child(n+2) {
    display: none;
  }
}

.about {
  color: var(--text-color-light);
  min-height: 46.6875rem;
  background: url(/about-bg.png) no-repeat center/cover;
  overflow: hidden;
  padding-bottom: 0;
}
.about__inner {
  text-align: center;
  display: flex;
  flex-direction: column;
  align-items: center;
  row-gap: 0.625rem;
}

.why-us {
  color: var(--text-color-light);
  background-color: #36697F;
}
.why-us__inner {
  display: flex;
  flex-direction: column;
  align-items: center;
  row-gap: 2.5rem;
}
.why-us__list {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-auto-flow: column dense;
  grid-template-rows: auto auto;
  gap: 1.875rem 1.25rem;
  line-height: 1.75rem;
}
@media (width <= 89.9375rem) {
  .why-us__list {
    grid-template-columns: repeat(1, 1fr);
    grid-template-rows: none;
    grid-auto-flow: row;
  }
}
.why-us__item {
  display: flex;
  align-items: start;
  column-gap: 0.625rem;
}
.why-us__item-info {
  display: flex;
  flex-direction: column;
  align-items: start;
  row-gap: 0.625rem;
}
.why-us__number {
  font-size: 5.25rem;
}
@media (width <= 47.9375rem) {
  .why-us__number {
    font-size: 3.375rem;
  }
}
.why-us__number-overlay {
  width: 5rem;
  height: 5rem;
  display: flex;
  justify-content: center;
  align-items: center;
}

.faq {
  display: flex;
  flex-direction: column;
  align-items: center;
  row-gap: 4rem;
  font-size: 1.5rem;
}
.faq__body {
  display: grid;
  grid-template-columns: 6fr 4fr;
  column-gap: 1.875rem;
  width: 100%;
}
@media (width <= 63.9375rem) {
  .faq__body {
    grid-template-columns: 1fr;
    row-gap: 2.5rem;
  }
}
.faq__list {
  display: flex;
  flex-direction: column;
  row-gap: 0.625rem;
}
.faq__question {
  transition: color 0.3s;
  cursor: pointer;
}
@media (any-hover: hover) {
  .faq__question:hover {
    color: var(--color-accent);
  }
}
@media (any-hover: none) {
  .faq__question:active {
    color: var(--color-accent);
  }
}
.faq__question[open] .faq__summary::after {
  transform: rotate(90deg);
}
.faq__summary {
  position: relative;
  display: flex;
  align-items: center;
  padding: 0.5rem 0.625rem 0.5rem 0;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
.faq__summary::after {
  transition: transform 0.3s;
  content: "›";
  font-size: 2.25rem;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 1.5rem;
  height: 1.5rem;
  right: 0;
  position: absolute;
}
.faq__summary::marker {
  content: none;
}
.faq__paragraph {
  padding-left: 1.25rem;
}

.form {
  display: flex;
  flex-direction: column;
  font-size: 1.25rem;
  row-gap: 1.25rem;
}
.form__fieldset {
  display: flex;
  flex-direction: column;
  align-items: start;
  row-gap: 1.25rem;
  width: 100%;
}
@media (width <= 63.9375rem) {
  .form__fieldset {
    width: 50%;
  }
}
@media (width <= 47.9375rem) {
  .form__fieldset {
    width: 100%;
  }
}
.form__fieldset-overlay {
  display: flex;
  justify-content: center;
}
.form__legend {
  align-self: center;
}
.form__group {
  display: flex;
  flex-direction: column;
  row-gap: 0.5rem;
  align-items: start;
  width: 100%;
}
.form__title {
  font-size: 1.5rem;
}
.form__input {
  width: 100%;
  height: 3rem;
  background-color: #F6F7F7;
  border: 1px solid #A6BCC6;
  border-radius: 0.375rem;
}
.form__input:user-invalid {
  border-color: red !important;
  outline-color: red;
}
.form__input--textarea {
  height: 6rem;
}
.form__button {
  align-self: center;
}
@media (any-hover: hover) {
  .form__button:hover {
    color: var(--color-accent);
  }
}
@media (any-hover: none) {
  .form__button:active {
    color: var(--color-accent);
  }
}
.form__error {
  color: red;
}

.footer {
  background-color: var(--color-current);
  color: var(--text-color-light);
  padding-block: 2.5rem;
}
.footer__paragraph {
  font-size: clamp(1.25rem, 1.1634615385rem + 0.3846153846vw, 1.5rem);
}
.footer__inner {
  display: flex;
  justify-content: space-between;
}
@media (width <= 63.9375rem) {
  .footer__inner {
    flex-direction: column;
    row-gap: 2.5rem;
  }
}
.footer__content {
  display: flex;
  flex-direction: column;
  align-items: start;
  justify-content: space-between;
}
@media (width <= 63.9375rem) {
  .footer__content {
    row-gap: 1.25rem;
  }
}
.footer__soc1als {
  display: flex;
  column-gap: 1.875rem;
}
.footer__info {
  display: flex;
  flex-direction: column;
  align-items: start;
  row-gap: 1.25rem;
}

/*# sourceMappingURL=main.css.map */
